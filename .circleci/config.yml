version: 2.1

executors:
  cci-ruby:
    docker:
    - image: cimg/ruby:3.2.2
      environment:
        RAILS_ENV: test
        RACK_ENV: test
  cci-base:
    docker:
    - image: cimg/base:stable

jobs:
  test:
    executor: cci-ruby
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install gems
          command: bundle install --path ~/.cache/bundle
      - save_cache:
          key: bundle-{{.Branch}}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.cache/bundle
      - run:
          name: Run tests
          command: bundle exec rspec
      - run:
          name: Check code style
          command: bundle exec rubocop

  deploy:
    executor: cci-ruby
    steps:
      - checkout
      - run:
          name: Tag the version
          command: |
            git fetch --tags
            version=$(cat lib/cirro_io/client/version.rb | grep VERSION | awk -F' = ' '{print $2}' | xargs)
            if git rev-parse v"$version" >/dev/null 2>&1; then
              echo "This version already exists. Please update the version";
              exit 1
            else
              git tag v"$version"
              git push origin v"$version"
            fi
      - run:
          name: Build the gem
          command: gem build cirro-ruby-client.gemspec
      - run:
          name: Push to Rubygems
          command: |
            version=$(cat lib/cirro_io/client/version.rb | grep VERSION | awk -F' = ' '{print $2}' | xargs)
            echo "gem $(gem --version)"
            mkdir ~/.gem
            cat .circleci/gem_credentials | sed -e "s/__RUBYGEMS_API_KEY__/$RUBYGEMS_API_KEY/" > ~/.gem/credentials
            chmod 0600 ~/.gem/credentials
            gem push cirro-ruby-client-$version.gem
            shred -u ~/.gem/credentials # completely remove the file making it hard for even very expensive hardware to recover the data

  defectdojo:
    executor: cci-base
    environment:
      DEFECTDOJO_URL: defectdojo.testcloud.io
      DEFECTDOJO_PRODUCT: Cirro Ruby Client
      DEFECTDOJO_ENG_NAME: CircleCI Scan
    circleci_ip_ranges: true # opts the job into the IP ranges feature
    steps:
      - checkout
      - run:
          name: Install Trivy and Gitleaks
          command: |
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin
            curl -sfL https://github.com/zricethezav/gitleaks/releases/download/v8.18.2/gitleaks_8.18.2_linux_x64.tar.gz -o gitleaks.tar.gz && \
            tar -xf gitleaks.tar.gz
      - run:
          name: Scans
          command: |
            trivy fs --exit-code 0 --no-progress --format json --output filesystem-scan.json .
            ./gitleaks detect --no-git --exit-code 0 --report-format json --report-path gitleaks.json
      - run:
          name: Send data to DefectDojo
          command: |
            # The DEFECTDOJO_TOKEN env var is set in CCI to not have to be authenticated
            # to GCP only for this purpose, so please change it there if it gets rotated

            # Send Trivy filesystem scan
            curl --fail --request POST https://$DEFECTDOJO_URL/api/v2/reimport-scan/ \
            --header "Authorization: Token $DEFECTDOJO_TOKEN" \
            --form "active=true" \
            --form "auto_create_context=true" \
            --form "branch_tag=${CIRCLE_BRANCH}" \
            --form "commit_hash=${CIRCLE_SHA1}" \
            --form "close_old_findings=true" \
            --form "scan_type=Trivy Scan" \
            --form "test_title=Trivy application scan" \
            --form "engagement_name=${DEFECTDOJO_ENG_NAME}" \
            --form "product_name=${DEFECTDOJO_PRODUCT}" \
            --form "file=@filesystem-scan.json"

            # Send Gitleaks scan
            curl --fail --request POST https://$DEFECTDOJO_URL/api/v2/reimport-scan/ \
            --header "Authorization: Token $DEFECTDOJO_TOKEN" \
            --form "active=true" \
            --form "auto_create_context=true" \
            --form "branch_tag=${CIRCLE_BRANCH}" \
            --form "commit_hash=${CIRCLE_SHA1}" \
            --form "close_old_findings=true" \
            --form "scan_type=Gitleaks Scan" \
            --form "test_title=Gitleaks Scan" \
            --form "engagement_name=${DEFECTDOJO_ENG_NAME}" \
            --form "product_name=${DEFECTDOJO_PRODUCT}" \
            --form "file=@gitleaks.json"

workflows:
  deploy_the_gem:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
      - defectdojo:
          filters:
            branches:
              only: master
